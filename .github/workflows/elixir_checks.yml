name: Elixir CI
on: 
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  prIsWip:
    name: PR is WIP?
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - id: pr-is-wip
        uses: shiipou/pr-is-wip-action@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  checks:
    name: Checks
    needs: 
      - prIsWip
    if: ${{ ! needs.prIsWip.outputs.isWip }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    services:
      postgres:
        # Docker Hub image
        image: postgres:13.6-alpine
        # Provide the password for postgres
        env: 
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.COMPONENTS_API_SSH }}
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Elixir
        uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          elixir-version: "1.12" # Define the elixir version [required]
          otp-version: "24" # Define the OTP version [required]
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Compile project
        run: mix compile
      - name: Check formatting
        run: mix format --check-formatted
      - name: Check code style with credo
        run: mix credo --strict
      - name: Run tests
        run: mix test
      - name: Run dialyzer
        run: mix dialyzer --format short
